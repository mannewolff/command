<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.mwolff</groupId>
	<artifactId>command</artifactId>
	<version>2.0.2</version>
	<packaging>jar</packaging>

	<name>Simple Command Framework</name>
	<description>A framework to build up SOLID-save applications.</description>
	<url>http://mwolff.info/wiki/display/SCF/The+Simple+Command+Framework</url>

	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>neusta software development GmbH</name>
		<url>http://neusta-sd.de</url>
	</organization>

	<developers>
		<developer>
			<name>Manfred Wolff</name>
			<email>m.wolff@neusta.de</email>
			<organization>neusta software development GmbH</organization>
			<organizationUrl>http://www.neusta-se.de</organizationUrl>
		</developer>
		<developer>
			<name>Michael Albrecht</name>
			<email>m.albrecht@neusta.de</email>
			<organization>neusta software development GmbH</organization>
			<organizationUrl>http://www.neusta-se.de</organizationUrl>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/simplecommand/command.git</url>
		<developerConnection>mwolff</developerConnection>
	</scm>

	<properties>
		<springframework.version>5.3.4</springframework.version>
		<!-- springframework.version>4.2.0.RELEASE</springframework.version -->
		<hamcrest.version>1.3</hamcrest.version>
		<catch-exception.version>1.4.4</catch-exception.version>
		<jacoco.version>0.8.3</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.7.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.23.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>eu.codearte.catch-exception</groupId>
			<artifactId>catch-exception</artifactId>
			<version>${catch-exception.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>eu.codearte.catch-exception</groupId>
			<artifactId>catch-throwable</artifactId>
			<version>1.4.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${springframework.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.4.10</version>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>0.11</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.16</version>
				<executions>
					<execution>
						<id>default-integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<outputDirectory>source.directory</outputDirectory>
					<finalName>simple-command</finalName>
					<attach>false</attach>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<skip>false</skip>
					<output>file</output>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- output file with report data. -->
							<dataFile>${project.build.outputDirectory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- output directory for the reports. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>

